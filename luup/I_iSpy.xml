<?xml version="1.0"?>
<implementation>
	 <handleChildren>1</handleChildren>
   <functions>
		 local CAM_SID = "urn:micasaverde-com:serviceId:Camera1"
		 local CMD_SID = "urn:micasaverde-com:serviceId:CameraMotionDetection1"
		 local HAD_SID = "urn:micasaverde-com:serviceId:HaDevice1"
		 local SES_SID = "urn:micasaverde-com:serviceId:SecuritySensor1"

		 local DEFAULT_ADDRESS = "Enter iSpy Server IP and Port"
		 local HTTPtimeout = 10
		 local DEF_camname = "index"
		 local DEF_Triptimeout = 30 -- 30 seconds
		 local DEBUG = false

		 local function ISPY_Log(text)
			 local id = PARENT_DEVICE or "unknown"
			 luup.log("iSpy Server Plugin #" .. id .. " " .. text)
		 end

		 local function ISPY_CAM_GetVar( VarName, DefaultVal )
			 local Gval = luup.variable_get(CAM_SID, VarName, parentDevice)
			 if ( Gval == nil ) then
				 luup.variable_set(CAM_SID, VarName, DefaultVal, parentDevice)
				 Gval = DefaultVal
			 end
			 return Gval
		 end

		 function untrip (sensorId)
			 sensorId = tonumber(sensorId, 10)
			 local lastTrip = luup.variable_get("urn:micasaverde-com:serviceId:SecuritySensor1", "LastTrip", sensorId) or 0
			 local now = os.time()
			 if os.difftime(now, lastTrip) >= DEF_Triptimeout then
				 luup.variable_set("urn:micasaverde-com:serviceId:SecuritySensor1", "Tripped", "0", sensorId)
			 end
		 end


		 function trip (request, parameters)
			 local sensorId = tonumber(parameters.sensor_id, 10) or 0
			 if sensorId == 0 then
				 return "failed"
			 end

			 luup.variable_set("urn:micasaverde-com:serviceId:SecuritySensor1", "Tripped", "1", sensorId)
			 luup.variable_set("urn:micasaverde-com:serviceId:SecuritySensor1", "LastTrip", tostring(os.time()), sensorId)

			 luup.call_delay("untrip", DEF_Triptimeout, parameters.sensor_id)

			 return "OK"
		 end

		 local function ISPY_getMotionSensorId()
			 local sensorId = tonumber(luup.variable_get(CMD_SID, "MotionSensorID", PARENT_DEVICE) , 10) or 0
			 if sensorId > 0 then
				 return sensorId
			 end

			 -- Get the motion sensor's device ID.
			 local altid = "ispy_".. PARENT_DEVICE .."_sensor"
			 for dev, attr in pairs(luup.devices) do
				 if attr.id == altid then
					 sensorId = dev
					 break
				 end
			 end

			 if sensorId == 0 then
				 -- We haven't created the motion sensor. Set State to STATE_CREATE_MS.
				 -- luup.variable_set(CMD_SID, "State", STATE_CREATE_MS, lug_device)
				 return
			 end

			 local setsensor = ISPY_CAM_GetVar("EnableMotionSensor", 0 )
			 if ( tonumber(setsensor) == 1 ) then
				 luup.variable_set(CMD_SID, "MotionSensorID", tostring(sensorId), PARENT_DEVICE)
			 end
			 return sensorId
		 end

		 function lug_startup(parentDevice)
			 PARENT_DEVICE = parentDevice
			 ISPY_Log("Version 0.4 Started")

			 local Cname = luup.attr_get("name", parentDevice)
			 if ( (Cname == "") or (Cname == "IP Camera Ext") ) then
				 luup.attr_set("name", "iSpy Server CAM #"..parentDevice, parentDevice)
			 end

			 lug_ip 				= luup.devices[parentDevice].ip
			 lug_username 	= luup.attr_get("username", parentDevice)
			 lug_password 	= luup.attr_get("password", parentDevice)
			 lug_camname 	= ISPY_CAM_GetVar("CameraName", DEF_camname )
			 lug_montion 	= ISPY_CAM_GetVar("EnableMotionSensor", 0 )
			 lug_ptz		= ISPY_CAM_GetVar("EnablePTZ", 0 )
			 lug_panpreset		= ISPY_CAM_GetVar("Pan2Preset", 0 )
			 lug_zoompreset	= ISPY_CAM_GetVar("Zoom2Preset", 0 )
			 lug_rev_hori	= ISPY_CAM_GetVar("ReverseHorizontal", 0 )
			 lug_rev_vert	= ISPY_CAM_GetVar("ReverseVertical", 0 )
			 -- Set Control Features - Start
			 Controls = {["u"] = "2", ["d"] = "3", ["l"] = "0", ["r"] ="1", ["zi"] = "5", ["zo"] = "6"} -- default control state
			 if (lug_panpreset == "1") then
				 Controls["u"] = "9"
				 Controls["d"] = "11"
				 Controls["l"] = "8"
				 Controls["r"] = "10"
				 if ( lug_zoompreset == "1" ) then
					 Controls["zi"] = "12"
					 Controls["zo"] = "13"
				 end
			 elseif ( lug_zoompreset == "1" ) then
				 Controls["zi"] = "8"
				 Controls["zo"] = "9"
			 else
				 if ( lug_rev_hori == "1" ) then
					 Controls["l"] = "1"
					 Controls["r"] = "0"
				 end
				 if ( lug_rev_vert == "1" ) then
					 Controls["u"] = "3"
					 Controls["d"] = "2"
				 end
			 end
			 -- Set Control Features - End

			 ISPY_CAM_GetVar( "URL", "/livefeed?oid=".. lug_camname )
			 ISPY_CAM_GetVar( "DirectStreamingURL", "/video.mjpg?oid=".. lug_camname )

			 -- Force Video URL based on cam name
			 local set_camurl = "/livefeed?oid=".. lug_camname
			 luup.variable_set(CAM_SID, "URL", set_camurl, parentDevice)

			 -- Force MJPEG Stream based on cam name
			 set_mjpgurl = "/video.mjpg?oid=".. lug_camname
			 luup.variable_set(CAM_SID, "DirectStreamingURL", set_mjpgurl, parentDevice)
			 if(DEBUG) then ISPY_Log("Video URL: " .. lug_ip .. set_camurl) end

			 -- Force to Cam Group
			 if luup.devices[parentDevice].category_num ~= 6 then
				 luup.attr_set("category_num", "6", parentDevice)
			 end

			 -- Turn on features depending on PTZ or static camera
			 local commands = luup.variable_get(HAD_SID, "Commands", parentDevice)
			 if not commands then
			   commands = "camera_full_screen,camera_archive_snapshot"
			   if lug_ptz == "1" then
				   commands = commands ..",camera_up,camera_down,camera_left,camera_right,camera_zoom_in,camera_zoom_out,camera_horizontal_patrol,camera_vertical_patrol,camera_stop_patrol,camera_preset"
				 end
				 luup.variable_set(HAD_SID, "Commands", commands, parentDevice)
			 end

			 -- Configure Motion Sensor
			 local MotionSID = ISPY_getMotionSensorId() or 0

			 if ( (lug_montion == "1") and ( tonumber(MotionSID) == 0) ) then
				 -- Create a Montion Sensor
				 ISPY_Log("Configuring Montion Sensor for iSpy Server Cam #" .. parentDevice )
				 local ptr = luup.chdev.start(parentDevice)
				 luup.chdev.append(parentDevice, ptr, "ispy_".. parentDevice .."_sensor", luup.devices[parentDevice].description .." Motion Sensor", "urn:schemas-micasaverde-com:device:MotionSensor:1", "D_MotionSensor1.xml", "", SES_SID ..",Armed=1\n".. SES_SID ..",Tripped=0", true, false)
				 luup.chdev.sync(parentDevice, ptr)

				 MotionSID = ISPY_getMotionSensorId()

				 ISPY_Log("Motion Sensor Setup: " .. tostring( MotionSID ) )

				 luup.variable_set(SES_SID, "OnTime", tostring(DEF_Triptimeout), MotionSID)
				 luup.register_handler("trip", "ispy_tripped")

			 elseif ( (lug_montion == "1") and (tonumber(MotionSID) > 0) ) then
				 -- Check if Name Changed
				 local CSname = luup.devices[tonumber(MotionSID)].name
				 local NSname = luup.devices[parentDevice].description .." Motion Sensor"
				 if ( CSname ~= NSname ) then
					 luup.attr_set("name", NSname, MotionSID)
				 end
				 luup.variable_set(SES_SID, "OnTime", tostring(DEF_Triptimeout), MotionSID)
				 luup.register_handler("trip", "ispy_tripped")

			 elseif ( (lug_montion == "0") and ( tonumber(MotionSID) > 0) ) then
				 -- Delete Motion Sensor
				 luup.inet.wget("http://127.0.0.1:3480/data_request?id=device&amp;action=delete&amp;device=".. tostring(MotionSID) )
				 luup.variable_set(CAM_SID, "EnableMotionSensor", 0, parentDevice)
				 luup.variable_set(CMD_SID, "MotionSensorID", 0, parentDevice)
				 ISPY_Log("Deleting Sensor Since EnableMotionSensor is set to 0  Sensor ID# " .. tostring(MotionSID) )

			 else
				 if(DEBUG) then ISPY_Log("SKIPPING Montion Sensor for iSpy Server Cam #" .. parentDevice ) end
			 end
		 end
   </functions>
   <startup>lug_startup</startup>
   <actionList>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>MoveLeft</name>
         <job>
            luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["l"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>MoveRight</name>
         <job>
            luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["r"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>MoveUp</name>
         <job>
            luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["u"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>MoveDown</name>
         <job>
            luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["d"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>ZoomOut</name>
         <job>
         		luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["zo"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
      <action>
         <serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
         <name>ZoomIn</name>
         <job>
         		luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. Controls["zi"], HTTPtimeout, lug_username, lug_password)
         </job>
      </action>
			<action>
				<serviceId>urn:micasaverde-com:serviceId:PanTiltZoom1</serviceId>
				<name>GoToPreset</name>
				<job>
					local presetNumber = tonumber(lul_settings.presetNumber, 10) or 1
					presetNumber = tonumber( presetNumber ) + 7
					luup.inet.wget("http://" .. lug_ip .. "/cam/".. lug_camname .."/pos=" .. presetNumber, HTTPtimeout, lug_username, lug_password)
				</job>
			</action>
			<action>
				<serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
				<name>SetArmed</name>
				<job>
					MotionSID = tonumber(luup.variable_get(CMD_SID, "MotionSensorID", parentDevice) , 10) or 0
					if( MotionSID > 0 ) then
						luup.variable_set("urn:micasaverde-com:serviceId:SecuritySensor1", "Armed", lul_settings.newArmedValue, tonumber(MotionSID) )
						return 4
					else
						return 2
					end
				</job>
			</action>
   </actionList>
</implementation>
